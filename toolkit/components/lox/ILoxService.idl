#include "nsISupports.idl"

[scriptable, uuid(2e4ccfe4-4119-433d-92df-4e84cef81ae8)]
interface ILoxCallback : nsISupports {
    const unsigned long UNKNOWN = 0;
    const unsigned long REQUEST_FAILED = 1;
    const unsigned long UNREACHABLE_AUTHORITY = 2;
    void onSuccess(in ACString value);
    void onError(in unsigned long type, in ACString error);
};

[scriptable, uuid(cf31cde7-d354-4458-ae56-44330bda84dc)]
interface ILoxRequestHandler : nsISupports {
    const unsigned long NO_ERROR = 0;
    const unsigned long REQUEST_FAILED = 1;
    const unsigned long UNREACHABLE = 2;
    void handle(in unsigned long status, in ACString response);
};

[scriptable, uuid(3855b9c2-2358-4135-a35c-f95d4f4f2069)]
interface ILoxServiceHelper : nsISupports {
    void runRequest(in ACString procedure, in ACString request,
                    in ILoxRequestHandler handler);
    void store(in ACString data);
};

[scriptable, uuid(5fbd1f22-7d65-430f-bd82-43c574c364a2)]
interface ILoxService : nsISupports {
    void initialize(in ILoxServiceHelper helper, in ACString data);
    void uninitialize();

    Array<ACString> getBridges(in ACString loxId);
    boolean validateInvitation(in ACString invitation);
    Array<ACString> getInvites();
    unsigned long getNumInvites();
    unsigned long getRemainingInviteCount(in ACString loxId);
    ACString getEventData();

    void redeemInvite(in ACString invite, in ILoxCallback callback);
};
