// Preferences to harden Firefox's security and privacy
// Do not edit this file.

// Use the OS locale by default
pref("intl.locale.requested", "");

// Disable initial homepage notifications
pref("browser.search.update", false);
pref("browser.rights.3.shown", true);
pref("startup.homepage_welcome_url", "");
pref("startup.homepage_welcome_url.additional", "");

// Disable Firefox Welcome Dialog
pref("browser.aboutwelcome.enabled", false);

// Set a generic, default URL that will be opened in a tab after an update.
// Typically, this will not be used; instead, the <update> element within
// each update manifest should contain attributes similar to:
//   actions="showURL"
//   openURL="https://blog.torproject.org/tor-browser-55a2-released"
pref("startup.homepage_override_url", "https://blog.torproject.org/category/applications");

// Try to nag a bit more about updates: Pop up a restart dialog an hour after the initial dialog
pref("app.update.promptWaitTime", 3600);

#ifndef XP_MACOSX
// Disable staged updates on platforms other than macOS.
// Staged updates do not work on Windows due to #18292.
// Also, on Windows and Linux any changes that are made to the browser profile
// or Tor data after an update is staged will be lost.
pref("app.update.staging.enabled", false);
#endif

// Disable "Slow startup" warnings and associated disk history
// (bug #13346)
pref("browser.slowStartup.notificationDisabled", true);
pref("browser.slowStartup.maxSamples", 0);
pref("browser.slowStartup.samples", 0);

// Disable the "Refresh" prompt that is displayed for stale profiles.
pref("browser.disableResetPrompt", true);

// Disk activity: Disable Browsing History Storage
pref("browser.privatebrowsing.autostart", true);
pref("browser.cache.disk.enable", false);
pref("permissions.memory_only", true);
pref("network.cookie.lifetimePolicy", 2);
pref("security.nocertdb", true);

// Enabled LSNG
pref("dom.storage.next_gen", true);

// Disk activity: TBB Directory Isolation
pref("browser.download.useDownloadDir", false);
pref("browser.download.manager.addToRecentDocs", false);

// Misc privacy: Disk
pref("signon.rememberSignons", false);
pref("browser.formfill.enable", false);
pref("signon.autofillForms", false);
pref("browser.sessionstore.privacy_level", 2);
// Use the in-memory media cache and increase its maximum size (#29120)
pref("browser.privatebrowsing.forceMediaMemoryCache", true);
pref("media.memory_cache_max_size", 16384);

// Enable HTTPS-Only mode
pref("dom.security.https_only_mode", true);
pref("dom.security.https_only_mode.upgrade_onion", false);

// Require Safe Negotiation ( https://gitlab.torproject.org/tpo/applications/tor-browser/-/issues/27719 )
// Blocks connections to servers that don't support RFC 5746 [2] as they're potentially vulnerable to a
// MiTM attack [3]. A server without RFC 5746 can be safe from the attack if it disables renegotiations
// but the problem is that the browser can't know that. Setting this pref to true is the only way for the
// browser to ensure there will be no unsafe renegotiations on the channel between the browser and the server
// [STATS] SSL Labs (July 2021) reports over 99% of top sites have secure renegotiation [4]
// [1] https://wiki.mozilla.org/Security:Renegotiation
// [2] https://datatracker.ietf.org/doc/html/rfc5746
// [3] https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3555
// [4] https://www.ssllabs.com/ssl-pulse/
pref("security.ssl.require_safe_negotiation", true);

// Misc privacy: Remote
pref("browser.send_pings", false);
pref("geo.enabled", false);
pref("geo.provider.network.url", "");
pref("browser.search.suggest.enabled", false);
pref("browser.safebrowsing.malware.enabled", false);
pref("browser.safebrowsing.phishing.enabled", false);
pref("browser.safebrowsing.downloads.enabled", false);
pref("browser.safebrowsing.downloads.remote.enabled", false);
pref("browser.safebrowsing.blockedURIs.enabled", false);
pref("browser.safebrowsing.downloads.remote.url", "");
pref("browser.safebrowsing.provider.google.updateURL", "");
pref("browser.safebrowsing.provider.google.gethashURL", "");
pref("browser.safebrowsing.provider.google4.updateURL", "");
pref("browser.safebrowsing.provider.google4.gethashURL", "");
pref("browser.safebrowsing.provider.mozilla.updateURL", "");
pref("browser.safebrowsing.provider.mozilla.gethashURL", "");
pref("extensions.ui.lastCategory", "addons://list/extension");
pref("datareporting.healthreport.uploadEnabled", false);
pref("datareporting.policy.dataSubmissionEnabled", false);
// Make sure Unified Telemetry is really disabled, see: #18738.
pref("toolkit.telemetry.unified", false);
pref("toolkit.telemetry.enabled", false);
pref("toolkit.telemetry.updatePing.enabled", false); // Make sure updater telemetry is disabled; see #25909.
#ifdef XP_WIN
// Defense-in-depth: ensure that the Windows default browser agent will
// not ping Mozilla if it is somehow present (we omit it at build time).
pref("default-browser-agent.enabled", false);
#endif
pref("identity.fxaccounts.enabled", false); // Disable sync by default
pref("services.sync.engine.prefs", false); // Never sync prefs, addons, or tabs with other browsers
pref("services.sync.engine.addons", false);
pref("services.sync.engine.tabs", false);
pref("extensions.getAddons.cache.enabled", false); // https://blog.mozilla.org/addons/how-to-opt-out-of-add-on-metadata-updates/
pref("browser.newtabpage.enabled", false);
pref("browser.search.region", "US"); // The next two prefs disable GeoIP search lookups (#16254)
pref("browser.search.geoip.url", "");
pref("browser.fixup.alternate.enabled", false); // Bug #16783: Prevent .onion fixups
// Make sure there is no Tracking Protection active in Tor Browser, see: #17898.
pref("privacy.trackingprotection.enabled", false);
pref("privacy.trackingprotection.pbmode.enabled", false);
pref("privacy.trackingprotection.annotate_channels", false);
pref("privacy.trackingprotection.cryptomining.enabled", false);
pref("privacy.trackingprotection.fingerprinting.enabled", false);
pref("privacy.trackingprotection.socialtracking.enabled", false);
pref("privacy.socialtracking.block_cookies.enabled", false);
pref("privacy.annotate_channels.strict_list.enabled", false);

// Disable the Pocket extension (Bug #18886 and #31602)
pref("extensions.pocket.enabled", false);

// Disable activity stream/"Recommended by Pocket" in about:home (Bug #41029)
pref("browser.newtabpage.activity-stream.discoverystream.enabled", false);
pref("browser.newtabpage.activity-stream.feeds.section.topstories", false);

// Disable moreFromMozilla pane in the preferences/settings (tor-browser#41292).
pref("browser.preferences.moreFromMozilla", false);

// Disable the screenshot menu when right-clicking (Bug #40912 and #40007)
pref("extensions.screenshots.disabled", true);
pref("extensions.webcompat-reporter.enabled", false);

// Disable use of WiFi location information
pref("browser.region.network.scan", false);
pref("browser.region.network.url", "");
// Bug 40083: Make sure Region.jsm fetching is disabled
pref("browser.region.update.enabled", false);

// Don't load Mozilla domains in a separate tab process
pref("browser.tabs.remote.separatedMozillaDomains", "");

// Avoid DNS lookups on search terms
pref("browser.urlbar.dnsResolveSingleWordsAfterSearch", 0);

// Disable about:newtab and "first run" experiments
pref("messaging-system.rsexperimentloader.enabled", false);
pref("trailhead.firstrun.branches", "");

// [SETTING] General>Browsing>Recommend extensions as you browse (Bug #40700)
pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons", false); // disable CFR [FF67+]

// [SETTING] General>Browsing>Recommend features as you browse (Bug #40700)
pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.features", false); // disable CFR [FF67+]

// Clear the list of trusted recursive resolver services
pref("network.trr.resolvers", "");

// Disable the /etc/hosts parser
pref("network.trr.exclude-etc-hosts", false);

// Disable crlite
pref("security.pki.crlite_mode", 0);

// Disable website password breach alerts
pref("signon.management.page.breach-alerts.enabled", false);
pref("extensions.fxmonitor.enabled", false);

// Remove mobile app tracking URLs
pref("signon.management.page.mobileAndroidURL", "");
pref("signon.management.page.mobileAppleURL", "");

// Disable remote "password recipes"
pref("signon.recipes.remoteRecipes.enabled", false);

// Disable ServiceWorkers and push notifications by default
pref("dom.serviceWorkers.enabled", false);
pref("dom.push.enabled", false);

// Fingerprinting
pref("webgl.disable-fail-if-major-performance-caveat", true);
pref("webgl.enable-webgl2", false);
pref("gfx.downloadable_fonts.fallback_delay", -1);
pref("browser.startup.homepage_override.buildID", "20100101");
pref("browser.link.open_newwindow.restriction", 0); // Bug 9881: Open popups in new tabs (to avoid fullscreen popups)
// Set video VP9 to 0 for everyone (bug 22548)
pref("media.benchmark.vp9.threshold", 0);
pref("dom.enable_resource_timing", false); // Bug 13024: To hell with this API
pref("privacy.resistFingerprinting", true);
pref("privacy.resistFingerprinting.block_mozAddonManager", true); // Bug 26114
pref("dom.webaudio.enabled", false); // Bug 13017: Disable Web Audio API
pref("dom.w3c_touch_events.enabled", 0); // Bug 10286: Always disable Touch API
pref("dom.vr.enabled", false); // Bug 21607: Disable WebVR for now
pref("security.webauth.webauthn", false); // Bug 26614: Disable Web Authentication API for now
// Disable SAB, no matter if the sites are cross-origin isolated.
pref("dom.postMessage.sharedArrayBuffer.withCOOP_COEP", false);
// Disable intermediate preloading (Bug 30682)
pref("security.remote_settings.intermediates.enabled", false);
// Bug 2874: Block Components.interfaces from content
pref("dom.use_components_shim", false);
// Enable letterboxing
pref("privacy.resistFingerprinting.letterboxing", true);
// Disable network information API everywhere. It gets spoofed in bug 1372072
// but, alas, the behavior is inconsistent across platforms, see:
// https://trac.torproject.org/projects/tor/ticket/27268#comment:19. We should
// not leak that difference if possible.
pref("dom.netinfo.enabled", false);
pref("network.http.referer.defaultPolicy", 2); // Bug 32948: Make referer behavior consistent regardless of private browing mode status
pref("media.videocontrols.picture-in-picture.enabled", false); // Bug 40148: disable until audited in #40147
pref("network.http.referer.hideOnionSource", true);
// Bug 40463: Disable Windows SSO
pref("network.http.windows-sso.enabled", false);
// Bug 40383: Disable new PerformanceEventTiming
pref("dom.enable_event_timing", false);
// Disable API for measuring text width and height.
pref("dom.textMetrics.actualBoundingBox.enabled", false);
pref("dom.textMetrics.baselines.enabled", false);
pref("dom.textMetrics.emHeight.enabled", false);
pref("dom.textMetrics.fontBoundingBox.enabled", false);
pref("pdfjs.enableScripting", false);
pref("javascript.options.large_arraybuffers", false);
// Bug 40057: Ensure system colors are not used for CSS4 colors
pref("browser.display.use_system_colors", false);

// Third party stuff
pref("privacy.firstparty.isolate", true); // Always enforce first party isolation
pref("privacy.partition.network_state", false); // Disable for now until audit
pref("network.cookie.cookieBehavior", 1);
pref("network.cookie.cookieBehavior.pbmode", 1);
pref("network.http.http2.allow-push", false); // Disabled for now. See https://bugs.torproject.org/27127 and tor-browser#41014
pref("network.predictor.enabled", false); // Temporarily disabled. See https://bugs.torproject.org/16633
// Bug 40177: Make sure tracker cookie purging is disabled
pref("privacy.purge_trackers.enabled", false);

pref("network.dns.disablePrefetch", true);
pref("network.protocol-handler.external-default", false);
pref("network.protocol-handler.external.mailto", false);
pref("network.protocol-handler.external.news", false);
pref("network.protocol-handler.external.nntp", false);
pref("network.protocol-handler.external.snews", false);
pref("network.protocol-handler.warn-external.mailto", true);
pref("network.protocol-handler.warn-external.news", true);
pref("network.protocol-handler.warn-external.nntp", true);
pref("network.protocol-handler.warn-external.snews", true);
pref("network.proxy.allow_bypass", false, locked); // #40682
// Lock to 'true', which is already the firefox default, to prevent users
// from making themselves fingerprintable by disabling. This pref
// alters content load order in a page. See tor-browser#24686
pref("network.http.tailing.enabled", true, locked);

// Make sure we don't have any GIO supported protocols (defense in depth
// measure)
pref("network.gio.supported-protocols", "");
pref("media.peerconnection.enabled", false); // Disable WebRTC interfaces
// Disables media devices but only if `media.peerconnection.enabled` is set to
// `false` as well. (see bug 16328 for this defense-in-depth measure)
pref("media.navigator.enabled", false);
// GMPs (Gecko Media Plugins, https://wiki.mozilla.org/GeckoMediaPlugins)
// We make sure they don't show up on the Add-on panel and confuse users.
// And the external update/donwload server must not get pinged. We apply a
// clever solution for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=769716.
pref("media.gmp-provider.enabled", false);
pref("media.gmp-manager.url.override", "data:text/plain,");
// Since ESR52 it is not enough anymore to block pinging the GMP update/download
// server. There is a local fallback that must be blocked now as well. See:
// https://bugzilla.mozilla.org/show_bug.cgi?id=1267495.
pref("media.gmp-manager.updateEnabled", false);
// Mozilla is relying on preferences to make sure no DRM blob is downloaded and
// run. Even though those prefs should be set correctly by specifying
// --disable-eme (which we do), we disable all of them here as well for defense
// in depth (see bug 16285 for more details).
pref("browser.eme.ui.enabled", false);
pref("media.gmp-widevinecdm.visible", false);
pref("media.gmp-widevinecdm.enabled", false);
pref("media.eme.enabled", false);
pref("media.mediadrm-widevinecdm.visible", false);
// WebIDE can bypass proxy settings for remote debugging. It also downloads
// some additional addons that we have not reviewed. Turn all that off.
pref("devtools.webide.autoinstallADBExtension", false);
pref("devtools.webide.enabled", false);
// The in-browser debugger for debugging chrome code is not coping with our
// restrictive DNS look-up policy. We use "127.0.0.1" instead of "localhost" as
// a workaround. See bug 16523 for more details.
pref("devtools.debugger.chrome-debugging-host", "127.0.0.1");
// Disable using UNC paths (bug 26424 and Mozilla's bug 1413868)
pref("network.file.disable_unc_paths", true);
// Enhance our treatment of file:// to avoid proxy bypasses (see Mozilla's bug
// 1412081)
pref("network.file.path_blacklist", "/net");

// Security slider
pref("svg.disabled", false);
pref("mathml.disabled", false);

// Bug 40408
pref("svg.context-properties.content.allowed-domains", "");

// Network and performance
pref("security.ssl.enable_false_start", true);
pref("network.http.connection-retry-timeout", 0);
pref("network.manage-offline-status", false);
// No need to leak things to Mozilla, see bug 21790 and tor-browser#40322
pref("network.captive-portal-service.enabled", false);
pref("network.connectivity-service.enabled", false);
// As a "defense in depth" measure, configure an empty push server URL (the
// DOM Push features are disabled by default via other prefs).
pref("dom.push.serverURL", "");

// Extension support
pref("extensions.autoDisableScopes", 0);
pref("extensions.bootstrappedAddons", "{}");
pref("extensions.checkCompatibility.4.*", false);
pref("extensions.databaseSchema", 3);
pref("extensions.enabledScopes", 5); // AddonManager.SCOPE_PROFILE=1 | AddonManager.SCOPE_APPLICATION=4
pref("extensions.pendingOperations", false);
// We don't know what extensions Mozilla is advertising to our users and we
// don't want to have some random Google Analytics script running either on the
// about:addons page, see bug 22073, 22900 and 31601.
pref("extensions.getAddons.showPane", false);
pref("extensions.htmlaboutaddons.recommendations.enabled", false);
// Bug 26114: Allow NoScript to access addons.mozilla.org etc.
pref("extensions.webextensions.restrictedDomains", "");
// Don't give Mozilla-recommended third-party extensions special privileges.
pref("extensions.postDownloadThirdPartyPrompt", false);

// Toolbar layout
pref("browser.uiCustomization.state", "{\"placements\":{\"widget-overflow-fixed-list\":[],\"PersonalToolbar\":[\"personal-bookmarks\"],\"nav-bar\":[\"back-button\",\"forward-button\",\"stop-reload-button\",\"urlbar-container\",\"security-level-button\",\"new-identity-button\",\"downloads-button\"],\"TabsToolbar\":[\"tabbrowser-tabs\",\"new-tab-button\",\"alltabs-button\"],\"toolbar-menubar\":[\"menubar-items\"],\"PanelUI-contents\":[\"home-button\",\"edit-controls\",\"zoom-controls\",\"new-window-button\",\"save-page-button\",\"print-button\",\"bookmarks-menu-button\",\"history-panelmenu\",\"find-button\",\"preferences-button\",\"add-ons-button\",\"developer-button\"],\"addon-bar\":[\"addonbar-closebutton\",\"status-bar\"]},\"seen\":[\"developer-button\"],\"dirtyAreaCache\":[\"PersonalToolbar\",\"nav-bar\",\"TabsToolbar\",\"toolbar-menubar\"],\"currentVersion\":14,\"newElementCount\":1}");

// Enforce certificate pinning, see: https://bugs.torproject.org/16206
pref("security.cert_pinning.enforcement_level", 2);

// Don't load OS client certs.
pref("security.osclientcerts.autoload", false);

// Don't allow MitM via Microsoft Family Safety, see bug 21686
pref("security.family_safety.mode", 0);

// Don't allow MitM via enterprise roots, see bug 30681
pref("security.enterprise_roots.enabled", false);

// Don't ping Mozilla for MitM detection, see bug 32321
pref("security.certerrors.mitm.priming.enabled", false);

// Don't automatically enable enterprise roots, see bug 40166
pref("security.certerrors.mitm.auto_enable_enterprise_roots", false);

// Don't allow any domain overrides access to offscreen rendering, see tor-browser#41135
pref("gfx.offscreencanvas.domain-enabled", false);
pref("gfx.offscreencanvas.domain-allowlist", "");

// Disable the language pack signing check for now on macOS, see #31942
#ifdef XP_MACOSX
pref("extensions.langpacks.signatures.required", false);
#endif

// Disable special URL bar behaviors
pref("browser.urlbar.suggest.topsites", false);
pref("browser.urlbar.update1.interventions", false);
pref("browser.urlbar.update1.searchTips", false);

// Skip checking omni.ja and other files for corruption since the result
// is only reported via telemetry (which is disabled).
pref("corroborator.enabled", false);

// prefs to disable jump-list entries in the taskbar on Windows (see bug #12885)
#ifdef XP_WIN
// this pref changes the app's set AUMID to be dependent on the profile path, rather than
// attempting to read it from the registry; this is necessary so that the file generated
// by the jumplist system can be properly deleted if it is disabled
pref("taskbar.grouping.useprofile", true);
pref("browser.taskbar.lists.enabled", false);
pref("browser.taskbar.lists.frequent.enabled", false);
pref("browser.taskbar.lists.tasks.enabled", false);
pref("browser.taskbar.lists.recent.enabled", false);
#endif

// Disable Presentation API
pref("dom.presentation.controller.enabled", false);
pref("dom.presentation.enabled", false);
pref("dom.presentation.discoverable", false);
pref("dom.presentation.discoverable.encrypted", false);
pref("dom.presentation.discovery.enabled", false);
pref("dom.presentation.receiver.enabled", false);

pref("dom.audiochannel.audioCompeting", false);
pref("dom.audiochannel.mediaControl", false);

// If we are bundling fonts, whitelist those bundled fonts, and restrict system fonts to a selection.

#ifdef MOZ_BUNDLED_FONTS

// Bug 40342: Always use bundled fonts
pref("gfx.bundled-fonts.activate", 1);

#ifdef XP_MACOSX
pref("font.system.whitelist", "AppleGothic, Apple Color Emoji, Arial, Courier, Geneva, Georgia, Heiti TC, Helvetica, Helvetica Neue, .Helvetica Neue DeskInterface, Hiragino Kaku Gothic ProN, Kailasa, Lucida Grande, Menlo, Monaco, STHeiti, Tahoma, Thonburi, Times, Times New Roman, Verdana, STIX Math, Noto Sans Adlam, Noto Sans Armenian, Noto Sans Balinese, Noto Sans Bamum, Noto Sans Bassa Vah, Noto Sans Batak, Noto Sans Bengali, Noto Sans Buginese, Noto Sans Buhid, Noto Sans Canadian Aboriginal, Noto Sans Chakma, Noto Sans Cham, Noto Sans Cherokee, Noto Sans Coptic, Noto Sans Deseret, Noto Sans Devanagari, Noto Sans Elbasan, Noto Sans Ethiopic, Noto Sans Georgian, Noto Sans Grantha, Noto Sans Gujarati, Noto Sans Gunjala Gondi, Noto Sans Gurmukhi, Noto Sans Hanifi Rohingya, Noto Sans Hanunoo, Noto Sans Hebrew, Noto Sans Kannada, Noto Sans Khmer, Noto Sans Javanese, Noto Sans Kayah Li, Noto Sans Khojki, Noto Sans Khudawadi, Noto Sans Lao, Noto Sans Lepcha, Noto Sans Limbu, Noto Sans Lisu, Noto Sans Mahajani, Noto Sans Malayalam, Noto Sans Mandaic, Noto Sans Masaram Gondi, Noto Sans Medefaidrin, Noto Sans Meetei Mayek, Noto Sans Mende Kikakui, Noto Sans Miao, Noto Sans Modi, Noto Sans Mongolian, Noto Sans Mro, Noto Sans Myanmar, Noto Sans Multani, Noto Sans Newa, Noto Sans New Tai Lue, Noto Sans NKo, Noto Sans Ol Chiki, Noto Sans Oriya, Noto Sans Osage, Noto Sans Osmanya, Noto Sans Pahawh Hmong, Noto Sans Pau Cin Hau, Noto Sans Rejang, Noto Sans Runic, Noto Sans Samaritan, Noto Sans Saurashtra, Noto Sans Sharada, Noto Sans Shavian, Noto Sans Sinhala, Noto Sans Sora Sompeng, Noto Sans Soyombo, Noto Sans Sundanese, Noto Sans Syloti Nagri, Noto Sans Symbols2, Noto Sans Symbols, Noto Sans Syriac, Noto Sans Tagalog, Noto Sans Tagbanwa, Noto Sans Tai Le, Noto Sans Tai Tham, Noto Sans Tai Viet, Noto Sans Takri, Noto Sans Tamil, Noto Sans Telugu, Noto Sans Thaana, Noto Sans Tifinagh Adrar, Noto Sans Tifinagh Agraw Imazighen, Noto Sans Tifinagh Ahaggar, Noto Sans Tifinagh Air, Noto Sans Tifinagh APT, Noto Sans Tifinagh Azawagh, Noto Sans Tifinagh Ghat, Noto Sans Tifinagh Hawad, Noto Sans Tifinagh, Noto Sans Tifinagh Rhissa Ixa, Noto Sans Tifinagh SIL, Noto Sans Tifinagh Tawellemmet, Noto Sans Tirhuta, Noto Sans Vai, Noto Sans Wancho, Noto Sans Warang Citi, Noto Sans Yi, Noto Sans Zanabazar Square, Noto Serif Armenian, Noto Serif Balinese, Noto Serif Bengali, Noto Serif Devanagari, Noto Serif Dogra, Noto Serif Ethiopic, Noto Serif Georgian, Noto Serif Grantha, Noto Serif Gujarati, Noto Serif Gurmukhi, Noto Serif Hebrew, Noto Serif Hmong Nyiakeng, Noto Serif Kannada, Noto Serif Khmer, Noto Serif Khojki, Noto Serif Lao, Noto Serif Malayalam, Noto Serif Myanmar, Noto Serif Sinhala, Noto Serif Tamil, Noto Serif Telugu, Noto Serif Tibetan, Noto Serif Yezidi");

// Armenian
pref("font.name-list.serif.x-armn", "Noto Serif Armenian, Times, Times New Roman");
pref("font.name-list.sans-serif.x-armn", "Noto Sans Armenian, Helvetica, Arial");
pref("font.name-list.monospace.x-armn", "Noto Sans Armenian, Menlo, Courier New");
// Bengali
pref("font.name-list.serif.x-beng", "Noto Serif Bengali, Times, Times New Roman");
pref("font.name-list.sans-serif.x-beng", "Noto Sans Bengali, Helvetica, Arial");
pref("font.name-list.monospace.x-beng", "Noto Sans Bengali, Menlo, Courier New");
// Canadian Aboriginal
pref("font.name-list.serif.x-cans", "Noto Serif Canadian Aboriginal, Times, Times New Roman");
pref("font.name-list.sans-serif.x-cans", "Noto Sans Canadian Aboriginal, Helvetica, Arial");
pref("font.name-list.monospace.x-cans", "Noto Sans Canadian Aboriginal, Menlo, Courier New");
// Devanagari
pref("font.name-list.serif.x-devanagari", "Noto Serif Devanagari, Times, Times New Roman");
pref("font.name-list.sans-serif.x-devanagari", "Noto Sans Devanagari, Helvetica, Arial");
pref("font.name-list.monospace.x-devanagari", "Noto Sans Devanagari, Menlo, Courier New");
// Ethiopic
pref("font.name-list.serif.x-ethi", "Noto Serif Ethiopic, Times, Times New Roman");
pref("font.name-list.sans-serif.x-ethi", "Noto Sans Ethiopic, Helvetica, Arial");
pref("font.name-list.monospace.x-ethi", "Noto Sans Ethiopic, Menlo, Courier New");
// Georgian
pref("font.name-list.serif.x-geor", "Noto Serif Georgian, Times, Times New Roman");
pref("font.name-list.sans-serif.x-geor", "Noto Sans Georgian, Helvetica, Arial");
pref("font.name-list.monospace.x-geor", "Noto Sans Georgian, Menlo, Courier New");
// Gujarati
pref("font.name-list.serif.x-gujr", "Noto Serif Gujarati, Times, Times New Roman");
pref("font.name-list.sans-serif.x-gujr", "Noto Sans Gujarati, Helvetica, Arial");
pref("font.name-list.monospace.x-gujr", "Noto Sans Gujarati, Menlo, Courier New");
// Gurmukhi
pref("font.name-list.serif.x-guru", "Noto Serif Gurmukhi, Times, Times New Roman");
pref("font.name-list.sans-serif.x-guru", "Noto Sans Gurmukhi, Helvetica, Arial");
pref("font.name-list.monospace.x-guru", "Noto Sans Gurmukhi, Menlo, Courier New");
// Hebrew
pref("font.name-list.serif.he", "Noto Serif Hebrew, Times, Times New Roman");
pref("font.name-list.sans-serif.he", "Noto Sans Hebrew, Helvetica, Arial");
pref("font.name-list.monospace.he", "Noto Sans Hebrew, Menlo, Courier New");
// Kannada
pref("font.name-list.serif.x-knda", "Noto Serif Kannada, Times, Times New Roman");
pref("font.name-list.sans-serif.x-knda", "Noto Sans Kannada, Helvetica, Arial");
pref("font.name-list.monospace.x-knda", "Noto Sans Kannada, Menlo, Courier New");
// Khmer
pref("font.name-list.serif.x-khmr", "Noto Serif Khmer, Times, Times New Roman");
pref("font.name-list.sans-serif.x-khmr", "Noto Sans Khmer, Helvetica, Arial");
pref("font.name-list.monospace.x-khmr", "Noto Sans Khmer, Menlo, Courier New");
// Malayalam
pref("font.name-list.serif.x-mlym", "Noto Serif Malayalam, Times, Times New Roman");
pref("font.name-list.sans-serif.x-mlym", "Noto Sans Malayalam, Helvetica, Arial");
pref("font.name-list.monospace.x-mlym", "Noto Sans Malayalam, Menlo, Courier New");
// Oriya
pref("font.name-list.serif.x-orya", "Noto Sans Oriya, Times, Times New Roman");
pref("font.name-list.sans-serif.x-orya", "Noto Sans Oriya, Helvetica, Arial");
pref("font.name-list.monospace.x-orya", "Noto Sans Oriya, Menlo, Courier New");
// Sinhala
pref("font.name-list.serif.x-sinh", "Noto Serif Sinhala, Times, Times New Roman");
pref("font.name-list.sans-serif.x-sinh", "Noto Sans Sinhala, Helvetica, Arial");
pref("font.name-list.monospace.x-sinh", "Noto Sans Sinhala, Menlo, Courier New");
// Tamil
pref("font.name-list.serif.x-tamil", "Noto Serif Tamil, Times, Times New Roman");
pref("font.name-list.sans-serif.x-tamil", "Noto Sans Tamil, Helvetica, Arial");
pref("font.name-list.monospace.x-tamil", "Noto Sans Tamil, Menlo, Courier New");
// Telugu
pref("font.name-list.serif.x-telu", "Noto Serif Telugu, Times, Times New Roman");
pref("font.name-list.sans-serif.x-telu", "Noto Sans Telugu, Helvetica, Arial");
pref("font.name-list.monospace.x-telu", "Noto Sans Telugu, Menlo, Courier New");
// Tibetan
pref("font.name-list.serif.x-tibt", "Noto Serif Tibetan, Times, Times New Roman");
pref("font.name-list.sans-serif.x-tibt", "Noto Serif Tibetan, Helvetica, Arial");
pref("font.name-list.monospace.x-tibt", "Noto Serif Tibetan, Menlo, Courier New");
// Others (Balinese, Grantha, Khojki, Lao, Myanmar)
pref("font.name-list.serif.x-unicode", "Times, Times New Roman, Noto Serif Balinese, Noto Serif Grantha, Noto Serif Khojki, Noto Serif Lao, Noto Serif Myanmar");
pref("font.name-list.sans-serif.x-unicode", "Helvetica, Arial, Noto Sans Balinese, Noto Sans Grantha, Noto Sans Khojki, Noto Sans Lao, Noto Sans Myanmar");
pref("font.name-list.monospace.x-unicode", "Menlo, Courier New, Noto Sans Balinese, Noto Sans Grantha, Noto Sans Khojki, Noto Sans Lao, Noto Sans Myanmar");
// The rest are not customized, because they are covered only by one font
#endif

#ifdef XP_WIN
pref("font.system.whitelist", "Arial, Cambria Math, Consolas, Courier New, Georgia, Lucida Console, MS Gothic, ＭＳ ゴシック, MS PGothic, ＭＳ Ｐゴシック, MV Boli, Malgun Gothic, Microsoft Himalaya, Microsoft JhengHei, Microsoft YaHei, 微软雅黑, Segoe UI, SimSun, 宋体, Sylfaen, Tahoma, Times New Roman, Verdana, Twemoji Mozilla, Noto Sans Adlam, Noto Sans Balinese, Noto Sans Bamum, Noto Sans Bassa Vah, Noto Sans Batak, Noto Sans Bengali, Noto Sans Buginese, Noto Sans Buhid, Noto Sans Canadian Aboriginal, Noto Sans Chakma, Noto Sans Cham, Noto Sans Cherokee, Noto Sans Coptic, Noto Sans Deseret, Noto Sans Devanagari, Noto Sans Elbasan, Noto Sans Ethiopic, Noto Sans Georgian, Noto Sans Grantha, Noto Sans Gujarati, Noto Sans Gunjala Gondi, Noto Sans Gurmukhi, Noto Sans Hanifi Rohingya, Noto Sans Hanunoo, Noto Sans Kannada, Noto Sans Khmer, Noto Sans Javanese, Noto Sans Kayah Li, Noto Sans Khojki, Noto Sans Khudawadi, Noto Sans Lao, Noto Sans Lepcha, Noto Sans Limbu, Noto Sans Lisu, Noto Sans Mahajani, Noto Sans Malayalam, Noto Sans Mandaic, Noto Sans Masaram Gondi, Noto Sans Medefaidrin, Noto Sans Meetei Mayek, Noto Sans Mende Kikakui, Noto Sans Miao, Noto Sans Modi, Noto Sans Mongolian, Noto Sans Mro, Noto Sans Myanmar, Noto Sans Multani, Noto Sans Newa, Noto Sans New Tai Lue, Noto Sans NKo, Noto Sans Ol Chiki, Noto Sans Oriya, Noto Sans Osage, Noto Sans Osmanya, Noto Sans Pahawh Hmong, Noto Sans Pau Cin Hau, Noto Sans Rejang, Noto Sans Runic, Noto Sans Samaritan, Noto Sans Saurashtra, Noto Sans Sharada, Noto Sans Shavian, Noto Sans Sinhala, Noto Sans Sora Sompeng, Noto Sans Soyombo, Noto Sans Sundanese, Noto Sans Syloti Nagri, Noto Sans Symbols2, Noto Sans Symbols, Noto Sans Syriac, Noto Sans Tagalog, Noto Sans Tagbanwa, Noto Sans Tai Le, Noto Sans Tai Tham, Noto Sans Tai Viet, Noto Sans Takri, Noto Sans Tamil, Noto Sans Telugu, Noto Sans Thaana, Noto Sans Tifinagh Adrar, Noto Sans Tifinagh Agraw Imazighen, Noto Sans Tifinagh Ahaggar, Noto Sans Tifinagh Air, Noto Sans Tifinagh APT, Noto Sans Tifinagh Azawagh, Noto Sans Tifinagh Ghat, Noto Sans Tifinagh Hawad, Noto Sans Tifinagh, Noto Sans Tifinagh Rhissa Ixa, Noto Sans Tifinagh SIL, Noto Sans Tifinagh Tawellemmet, Noto Sans Tirhuta, Noto Sans Vai, Noto Sans Wancho, Noto Sans Warang Citi, Noto Sans Yi, Noto Sans Zanabazar Square, Noto Serif Balinese, Noto Serif Bengali, Noto Serif Devanagari, Noto Serif Dogra, Noto Serif Ethiopic, Noto Serif Georgian, Noto Serif Grantha, Noto Serif Gujarati, Noto Serif Gurmukhi, Noto Serif Hmong Nyiakeng, Noto Serif Kannada, Noto Serif Khmer, Noto Serif Khojki, Noto Serif Lao, Noto Serif Malayalam, Noto Serif Myanmar, Noto Serif Sinhala, Noto Serif Tamil, Noto Serif Telugu, Noto Serif Tibetan, Noto Serif Yezidi, Noto Naskh Arabic, Noto Sans, Noto Serif");

// Arabic
pref("font.name-list.serif.ar", "Times New Roman, Noto Naskh Arabic");
pref("font.name-list.sans-serif.ar", "Segoe UI, Tahoma, Arial, Noto Naskh Arabic");
pref("font.name-list.monospace.ar", "Consolas, Noto Naskh Arabic");
// Bengali
pref("font.name-list.serif.x-beng", "Noto Serif Bengali, Times New Roman");
pref("font.name-list.sans-serif.x-beng", "Noto Sans Bengali, Arial");
pref("font.name-list.monospace.x-beng", "Noto Sans Bengali, Consolas");
// Canadian Aboriginal
pref("font.name-list.serif.x-cans", "Noto Serif Canadian Aboriginal, Times New Roman");
pref("font.name-list.sans-serif.x-cans", "Noto Sans Canadian Aboriginal, Arial");
pref("font.name-list.monospace.x-cans", "Noto Sans Canadian Aboriginal, Consolas");
// Cyrillic (we use Noto only for fallback, system fonts have a good coverage)
pref("font.name-list.serif.x-cyrillic", "Times New Roman, Noto Serif");
pref("font.name-list.sans-serif.x-cyrillic", "Arial, Noto Sans");
// Devanagari
pref("font.name-list.serif.x-devanagari", "Noto Serif Devanagari, Times New Roman");
pref("font.name-list.sans-serif.x-devanagari", "Noto Sans Devanagari, Arial");
pref("font.name-list.monospace.x-devanagari", "Noto Sans Devanagari, Consolas");
// Ethiopic
pref("font.name-list.serif.x-ethi", "Noto Serif Ethiopic, Times New Roman");
pref("font.name-list.sans-serif.x-ethi", "Noto Sans Ethiopic, Arial");
pref("font.name-list.monospace.x-ethi", "Noto Sans Ethiopic, Consolas");
// Georgian
pref("font.name-list.serif.x-geor", "Noto Serif Georgian, Times New Roman");
pref("font.name-list.sans-serif.x-geor", "Noto Sans Georgian, Arial");
pref("font.name-list.monospace.x-geor", "Noto Sans Georgian, Consolas");
// Gujarati
pref("font.name-list.serif.x-gujr", "Noto Serif Gujarati, Times New Roman");
pref("font.name-list.sans-serif.x-gujr", "Noto Sans Gujarati, Arial");
pref("font.name-list.monospace.x-gujr", "Noto Sans Gujarati, Consolas");
// Gurmukhi
pref("font.name-list.serif.x-guru", "Noto Serif Gurmukhi, Times New Roman");
pref("font.name-list.sans-serif.x-guru", "Noto Sans Gurmukhi, Arial");
pref("font.name-list.monospace.x-guru", "Noto Sans Gurmukhi, Consolas");
// Kannada
pref("font.name-list.serif.x-knda", "Noto Serif Kannada, Times New Roman");
pref("font.name-list.sans-serif.x-knda", "Noto Sans Kannada, Arial");
pref("font.name-list.monospace.x-knda", "Noto Sans Kannada, Consolas");
// Khmer
pref("font.name-list.serif.x-khmr", "Noto Serif Khmer, Times New Roman");
pref("font.name-list.sans-serif.x-khmr", "Noto Sans Khmer, Arial");
pref("font.name-list.monospace.x-khmr", "Noto Sans Khmer, Consolas");
// Malayalam
pref("font.name-list.serif.x-mlym", "Noto Serif Malayalam, Times New Roman");
pref("font.name-list.sans-serif.x-mlym", "Noto Sans Malayalam, Arial");
pref("font.name-list.monospace.x-mlym", "Noto Sans Malayalam, Consolas");
// Oriya
pref("font.name-list.serif.x-orya", "Noto Sans Oriya, Times New Roman");
pref("font.name-list.sans-serif.x-orya", "Noto Sans Oriya, Arial");
pref("font.name-list.monospace.x-orya", "Noto Sans Oriya, Consolas");
// Sinhala
pref("font.name-list.serif.x-sinh", "Noto Serif Sinhala, Times New Roman");
pref("font.name-list.sans-serif.x-sinh", "Noto Sans Sinhala, Arial");
pref("font.name-list.monospace.x-sinh", "Noto Sans Sinhala, Consolas");
// Tamil
pref("font.name-list.serif.x-tamil", "Noto Serif Tamil, Times New Roman");
pref("font.name-list.sans-serif.x-tamil", "Noto Sans Tamil, Arial");
pref("font.name-list.monospace.x-tamil", "Noto Sans Tamil, Consolas");
// Telugu
pref("font.name-list.serif.x-telu", "Noto Serif Telugu, Times New Roman");
pref("font.name-list.sans-serif.x-telu", "Noto Sans Telugu, Arial");
pref("font.name-list.monospace.x-telu", "Noto Sans Telugu, Consolas");
// Tibetan
pref("font.name-list.serif.x-tibt", "Microsoft Himalaya, Noto Serif Tibetan, Times New Roman");
pref("font.name-list.sans-serif.x-tibt", "Microsoft Himalaya, Noto Serif Tibetan, Arial");
pref("font.name-list.monospace.x-tibt", "Microsoft Himalaya, Noto Serif Tibetan, Consolas");
// Others (Balinese, Grantha, Khojki, Lao, Myanmar)
pref("font.name-list.serif.x-unicode", "Times New Roman, Noto Serif Balinese, Noto Serif Grantha, Noto Serif Khojki, Noto Serif Lao, Noto Serif Myanmar");
pref("font.name-list.sans-serif.x-unicode", "Arial, Noto Sans Balinese, Noto Sans Grantha, Noto Sans Khojki, Noto Sans Lao, Noto Sans Myanmar");
pref("font.name-list.monospace.x-unicode", "Consolas, Noto Sans Balinese, Noto Sans Grantha, Noto Sans Khojki, Noto Sans Lao, Noto Sans Myanmar");
// The rest are not customized, because they are covered only by one font
#endif

#ifdef XP_LINUX
pref("layout.css.font-visibility.resistFingerprinting", 3); // work around bug 41163

// Arabic
pref("font.name-list.serif.ar", "Noto Naskh Arabic, Tinos");
pref("font.name-list.sans-serif.ar", "Noto Naskh Arabic, Arimo");
pref("font.name-list.monospace.ar", "Noto Naskh Arabic, Cousine");
// Armenian
pref("font.name-list.serif.x-armn", "Noto Serif Armenian, Tinos");
pref("font.name-list.sans-serif.x-armn", "Noto Sans Armenian, Arimo");
pref("font.name-list.sans-serif.x-armn", "Noto Sans Armenian, Cousine");
// Bengali
pref("font.name-list.serif.x-beng", "Noto Serif Bengali, Tinos");
pref("font.name-list.sans-serif.x-beng", "Noto Sans Bengali, Arimo");
pref("font.name-list.monospace.x-beng", "Noto Sans Bengali, Cousine");
// Canadian Aboriginal
pref("font.name-list.serif.x-cans", "Noto Serif Canadian Aboriginal, Tinos");
pref("font.name-list.sans-serif.x-cans", "Noto Sans Canadian Aboriginal, Arimo");
pref("font.name-list.monospace.x-cans", "Noto Sans Canadian Aboriginal, Cousine");
// ChineseCN
pref("font.name-list.serif.zh-CN", "Noto Sans SC Regular, Tinos");
pref("font.name-list.sans-serif.zh-CN", "Noto Sans SC Regular, Arimo");
pref("font.name-list.monospace.zh-CN", "Noto Sans SC Regular, Cousine");
// ChineseHK
pref("font.name-list.serif.zh-HK", "Noto Sans TC Regular, Tinos");
pref("font.name-list.sans-serif.zh-HK", "Noto Sans TC Regular, Arimo");
pref("font.name-list.monospace.zh-HK", "Noto Sans TC Regular, Cousine");
// ChineseTW
pref("font.name-list.serif.zh-TW", "Noto Sans TC Regular, Tinos");
pref("font.name-list.sans-serif.zh-TW", "Noto Sans TC Regular, Arimo");
pref("font.name-list.monospace.zh-TW", "Noto Sans TC Regular, Cousine");
// Cyrillic
pref("font.name-list.serif.x-cyrillic", "Tinos");
pref("font.name-list.sans-serif.x-cyrillic", "Arimo");
pref("font.name-list.monospace.x-cyrillic", "Cousine");
// Devanagari
pref("font.name-list.serif.x-devanagari", "Noto Serif Devanagari, Tinos");
pref("font.name-list.sans-serif.x-devanagari", "Noto Sans Devanagari, Arimo");
pref("font.name-list.monospace.x-devanagari", "Noto Sans Devanagari, Cousine");
// Ethiopic
pref("font.name-list.serif.x-ethi", "Noto Serif Ethiopic, Tinos");
pref("font.name-list.sans-serif.x-ethi", "Noto Sans Ethiopic, Arimo");
pref("font.name-list.monospace.x-ethi", "Noto Sans Ethiopic, Cousine");
// Georgian
pref("font.name-list.serif.x-geor", "Noto Serif Georgian, Tinos");
pref("font.name-list.sans-serif.x-geor", "Noto Sans Georgian, Arimo");
pref("font.name-list.monospace.x-geor", "Noto Sans Georgian, Cousine");
// Greek
pref("font.name-list.serif.el", "Tinos");
pref("font.name-list.sans-serif.el", "Arimo");
pref("font.name-list.monospace.el", "Cousine");
// Gujarati
pref("font.name-list.serif.x-gujr", "Noto Serif Gujarati, Tinos");
pref("font.name-list.sans-serif.x-gujr", "Noto Sans Gujarati, Arimo");
pref("font.name-list.monospace.x-gujr", "Noto Sans Gujarati, Cousine");
// Gurmukhi
pref("font.name-list.serif.x-guru", "Noto Serif Gurmukhi, Tinos");
pref("font.name-list.sans-serif.x-guru", "Noto Sans Gurmukhi, Arimo");
pref("font.name-list.monospace.x-guru", "Noto Sans Gurmukhi, Cousine");
// Hebrew
pref("font.name-list.serif.he", "Noto Serif Hebrew, Tinos");
pref("font.name-list.sans-serif.he", "Noto Sans Hebrew, Arimo");
pref("font.name-list.monospace.he", "Noto Sans Hebrew, Cousine");
// Japanese
pref("font.name-list.serif.ja", "Noto Sans JP Regular, Tinos");
pref("font.name-list.sans-serif.ja", "Noto Sans JP Regular, Arimo");
pref("font.name-list.monospace.ja", "Noto Sans JP Regular, Cousine");
// Kannada
pref("font.name-list.serif.x-knda", "Noto Serif Kannada, Tinos");
pref("font.name-list.sans-serif.x-knda", "Noto Sans Kannada, Arimo");
pref("font.name-list.monospace.x-knda", "Noto Sans Kannada, Cousine");
// Khmer
pref("font.name-list.serif.x-khmr", "Noto Serif Khmer, Tinos");
pref("font.name-list.sans-serif.x-khmr", "Noto Sans Khmer, Arimo");
pref("font.name-list.monospace.x-khmr", "Noto Sans Khmer, Cousine");
// Korean
pref("font.name-list.serif.ko", "Noto Sans KR Regular");
pref("font.name-list.sans-serif.ko", "Noto Sans KR Regular");
pref("font.name-list.monospace.ko", "Noto Sans KR Regular");
// Malayalam
pref("font.name-list.serif.x-mlym", "Noto Serif Malayalam, Tinos");
pref("font.name-list.sans-serif.x-mlym", "Noto Sans Malayalam, Arimo");
pref("font.name-list.monospace.x-mlym", "Noto Sans Malayalam, Cousine");
// Mathematics
pref("font.name-list.serif.x-math", "STIX Math Regular, Tinos");
pref("font.name-list.sans-serif.x-math", "STIX Math Regular, Arimo");
pref("font.name-list.monospace.x-math", "STIX Math Regular, Cousine");
// Oriya
pref("font.name-list.serif.x-orya", "Noto Sans Oriya, Tinos");
pref("font.name-list.sans-serif.x-orya", "Noto Sans Oriya, Arimo");
pref("font.name-list.monospace.x-orya", "Noto Sans Oriya, Cousine");
// Sinhala
pref("font.name-list.serif.x-sinh", "Noto Serif Sinhala, Tinos");
pref("font.name-list.sans-serif.x-sinh", "Noto Sans Sinhala, Arimo");
pref("font.name-list.monospace.x-sinh", "Noto Sans Sinhala, Cousine");
// Tamil
pref("font.name-list.serif.x-tamil", "Noto Serif Tamil, Tinos");
pref("font.name-list.sans-serif.x-tamil", "Noto Sans Tamil, Arimo");
pref("font.name-list.monospace.x-tamil", "Noto Sans Tamil, Cousine");
// Telugu
pref("font.name-list.serif.x-telu", "Noto Serif Telugu, Tinos");
pref("font.name-list.sans-serif.x-telu", "Noto Sans Telugu, Arimo");
pref("font.name-list.monospace.x-telu", "Noto Sans Telugu, Cousine");
// Thai
pref("font.name-list.serif.th", "Noto Serif Thai, Tinos");
pref("font.name-list.sans-serif.th", "Noto Sans Thai, Arimo");
pref("font.name-list.monospace.th", "Noto Sans Thai, Cousine");
// Tibetan
pref("font.name-list.serif.x-tibt", "Noto Serif Tibetan, Tinos");
pref("font.name-list.sans-serif.x-tibt", "Noto Serif Tibetan, Arimo");
pref("font.name-list.monospace.x-tibt", "Noto Serif Tibetan, Cousine");
// Western
pref("font.name-list.serif.x-western", "Tinos");
pref("font.name-list.sans-serif.x-western", "Arimo");
pref("font.name-list.monospace.x-western", "Cousine");
// Others (Balinese, Grantha, Khojki, Lao, Myanmar)
pref("font.name-list.serif.x-unicode", "Tinos, Noto Serif Balinese, Noto Serif Grantha, Noto Serif Khojki, Noto Serif Lao, Noto Serif Myanmar");
pref("font.name-list.sans-serif.x-unicode", "Arimo, Noto Sans Balinese, Noto Sans Grantha, Noto Sans Khojki, Noto Sans Lao, Noto Sans Myanmar");
pref("font.name-list.monospace.x-unicode", "Cousine, Noto Sans Balinese, Noto Sans Grantha, Noto Sans Khojki, Noto Sans Lao, Noto Sans Myanmar");
// The rest are not customized, because they are covered only by one font
#endif
#endif
